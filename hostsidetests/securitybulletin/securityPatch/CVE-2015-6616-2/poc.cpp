/**
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <MediaExtractor.h>
#include <MetaData.h>
#include <MediaDefs.h>

using namespace android;

int main(int argc, char **argv) {
    if (argc < 2) {
        return EXIT_FAILURE;
    }

    int32_t fd = open(argv[1], O_RDONLY);
    int64_t fileSize = lseek(fd, 0, SEEK_END);
    lseek(fd, 0, SEEK_SET);
    sp<DataSource> dataSource = DataSource::CreateFromFd(fd, 0, fileSize);
    if (dataSource == nullptr) {
        return EXIT_FAILURE;
    }

    sp<IMediaExtractor> ret =
            MediaExtractor::CreateFromService(dataSource, MEDIA_MIMETYPE_CONTAINER_MPEG4);
    if (ret == nullptr) {
        return EXIT_FAILURE;
    }

    sp < MetaData > metaData = new MetaData;
    metaData->setInt32(kKeyWantsNALFragments, 1);

    sp < IMediaSource > source = ret->getTrack(0);
    if (source == nullptr) {
        return EXIT_FAILURE;
    }

    status_t retValue = source->start(metaData.get());
    if(retValue != OK) {
        return EXIT_FAILURE;
    }

    MediaBuffer *buffer;
    source->read(&buffer,nullptr);

    return EXIT_SUCCESS;
}
