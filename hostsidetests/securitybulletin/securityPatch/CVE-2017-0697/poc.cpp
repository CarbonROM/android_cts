/**
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <sys/stat.h>
#include <fcntl.h>
#include <FileSource.h>
#include <MediaExtractor.h>
#include <MetaData.h>
#include <MPEG4Extractor.h>
#include <MediaDefs.h>
#include "../includes/memutils_track.h"

#define PSSH_BOX_SIZE            1048576
char enable_selective_overload = ENABLE_NONE;
using namespace android;

bool is_tracking_required(size_t size) {
    return (size == PSSH_BOX_SIZE);
}

int main(int argc, char* argv[]) {
    if (argc < 2) {
        return EXIT_FAILURE;
    }

    int32_t fd = open(argv[1], O_RDONLY);
    if(fd < 0) {
        return EXIT_FAILURE;
    }

    int64_t fileSize = lseek(fd, 0, SEEK_END);
    lseek(fd, 0, SEEK_SET);
    sp<DataSource> dataSource = DataSource::CreateFromFd(fd, 0, fileSize);
    if (dataSource == nullptr) {
        return EXIT_FAILURE;
    }

    enable_selective_overload = ENABLE_MALLOC_CHECK;

    sp<IMediaExtractor> extractor =
            MediaExtractor::CreateFromService(dataSource, MEDIA_MIMETYPE_CONTAINER_MPEG4);
    if (extractor == nullptr) {
        return EXIT_FAILURE;
    }

    extractor->getMetaData();
    enable_selective_overload = ENABLE_NONE;

    return EXIT_SUCCESS;
}
