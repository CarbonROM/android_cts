/**
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <media/stagefright/FileSource.h>
#include <media/stagefright/MediaExtractor.h>
#include <media/stagefright/MetaData.h>
#include "include/MPEG4Extractor.h"
#include "../includes/memutils.h"
#define LIBNAME "/system/lib/libstagefright.so"

using namespace android;
char enable_selective_overload = ENABLE_NONE;

int main(int argc, char **argv) {
    if (argc < 2) {
        return EXIT_SUCCESS;
    }
    sp < IMediaSource > mediaSource;
    sp < DataSource > dataSource = new FileSource(argv[1]);
    MediaExtractor *ret = new MPEG4Extractor(dataSource.get());

    enable_selective_overload = ENABLE_MEMALIGN_CHECK | ENABLE_MALLOC_CHECK
            | ENABLE_REALLOC_CHECK | ENABLE_FREE_CHECK;
    size_t numTracks = ret->countTracks();
    sp < MetaData > metadata;
    size_t i;
    for (i = 0; i < numTracks; ++i) {
        metadata = ret->getTrackMetaData(
                i, MediaExtractor::kIncludeExtensiveMetaData);
    }
    enable_selective_overload = ENABLE_NONE;

    return EXIT_SUCCESS;
}
