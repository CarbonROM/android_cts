/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <binder/IServiceManager.h>
#include <gui/ISurfaceComposer.h>
#include <gui/SurfaceComposerClient.h>

using namespace android;

int main() {
    sp < IServiceManager > sm = defaultServiceManager();
    String16 str("SurfaceFlinger");
    sp < IBinder > service;
    service = sm->checkService(str);

    Parcel data, reply;
    data.writeInterfaceToken(String16("android.ui.ISurfaceComposer"));

    SurfaceComposerClient *client = new SurfaceComposerClient;
    if (!client) {
        return EXIT_FAILURE;
    }
    client->createSurface(String8("BG Test Surface"), 10, 10,
                          PIXEL_FORMAT_RGBA_8888, 0);
    free(client);
    data.writeStrongBinder(new BBinder());
    Rect sourceCrop(Rect::EMPTY_RECT);
    data.write(sourceCrop);
    data.writeFloat(1.2f);
    data.writeBool(0);
    service->transact(BnSurfaceComposer::CAPTURE_LAYERS, data, &reply, 1);
    return EXIT_SUCCESS;
}
